class heap{
	public:
		void push(int x){
			heap[++si]=x;
			up(si);
		}
		void pop(){
			swap(1,si--);
			down(1);
		}
		int top(){
			return heap[1];
		}
		int size(){
			return si;
		}
	private:
		int si;
		int heap[maxn];
		void swap(int x,int y){
			int t=heap[x];
			heap[x]=heap[y];
			heap[y]=t;
		}
		bool cmp(int x,int y){
			return heap[x]<heap[y];
		}
		void up(int x){
			if(x==1)return;
			if(cmp(x,x>>1)){
				swap(x,x>>1);
				up(x>>1);
			}
		}
		void down(int x){
			if((x<<1)>si)return;
			if(cmp(x<<1|1,x)){
				if(si==(x<<1)||cmp(x<<1,x<<1|1)){
					swap(x,x<<1);
					down(x<<1);
				}
			}
			if((x<<1|1)<=si&&cmp(x<<1|1,x)){
				swap(x,x<<1|1);
				down(x<<1);
			}
		}
};
